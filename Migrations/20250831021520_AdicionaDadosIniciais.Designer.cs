// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Perfumes.WebAPI.Contexto;

#nullable disable

namespace Perfumes.WebAPI.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20250831021520_AdicionaDadosIniciais")]
    partial class AdicionaDadosIniciais
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("Perfumes.WebAPI.Entidades.Perfume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PerfumistaId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("PerfumistaId");

                    b.ToTable("Perfumes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Marca = "Natura",
                            Nome = "Essencial Elixir",
                            PerfumistaId = 1,
                            Tipo = "Deo Perfume",
                            Valor = 230f
                        },
                        new
                        {
                            Id = 2,
                            Marca = "Calvin Klein",
                            Nome = "CK One",
                            PerfumistaId = 2,
                            Tipo = "Eau de Toilette",
                            Valor = 199f
                        },
                        new
                        {
                            Id = 3,
                            Marca = "Dior",
                            Nome = "Sauvage",
                            PerfumistaId = 3,
                            Tipo = "Eau de Parfum",
                            Valor = 550f
                        });
                });

            modelBuilder.Entity("Perfumes.WebAPI.Entidades.Perfumista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Perfumistas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Verônica Kato"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Alberto Morillas"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Dominique Ropion"
                        });
                });

            modelBuilder.Entity("Perfumes.WebAPI.Entidades.Perfume", b =>
                {
                    b.HasOne("Perfumes.WebAPI.Entidades.Perfumista", "Perfumista")
                        .WithMany("Perfumes")
                        .HasForeignKey("PerfumistaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Perfumista");
                });

            modelBuilder.Entity("Perfumes.WebAPI.Entidades.Perfumista", b =>
                {
                    b.Navigation("Perfumes");
                });
#pragma warning restore 612, 618
        }
    }
}
